@charset "UTF-8";

@function ypa-map-next($map, $key) {
  $values: map-keys($map);
  $i: 0;
  
  @if (map-has-key($map, $key)) {
    $i: index($values, $key) + 1;
  }
  
  @if ($i > length($map) or $i == 0) {
    @return null;
  } @else {
    @return map-get($map, nth($values, $i));
  }
}

@function ypa-get-breakpoint($val: $_ypa-default-bp) {
  
  $bp: nth($val, 1);
  $bp-max: 0;
  $dir: if(length($val) > 1, nth($val, 2), up);
  $str: '';
  $named: false;
  
  // Try to pull a named breakpoint out of the $breakpoints map
  @if type-of($bp) == 'string' {
    @if map-has-key($breakpoints, $bp) {
      @if $dir == 'only' or $dir == 'down' {
        $bp-max: ypa-map-next($breakpoints, $bp);
      }
      
      $bp: map-get($breakpoints, $bp);
      $named: true;
    } @else {
      $bp: 0;
      @warn 'breakpoint(): "#{$val}" is not defined in your $breakpoints config.';
    }
  }
  
  @if $bp-max {
    $bp-max: $bp-max - .00125;
  }
  
  @if $bp > 0em or $dir == 'only' or $dir == 'down' {
    @if $dir == 'only' {
      @if $named == true {
        @if $bp > 0em {
          $str: $str + '(min-width: #{$bp})';
          @if $bp-max != null {
            $str: $str + ' and ';
          }
        }
        // Only use "max-width" if there's a ceiling
        @if $bp-max != null {
          $str: $str + '(max-width: #{$bp-max})';
        }
      } @else {
        @warn 'breakpoint(): Only named media queries can have an `only` range.';
      }
    }
    
    @else if $dir == 'down' {
      $max: if($named, $bp-max, $bp);
      @if $named or $bp > 0em {
        @if $max != null {
          $str: $str + '(max-width: #{$max})';
        }
      }
    }
    
    @else if $bp > 0em {
      $str: $str + '(min-width: #{$bp})';
    }
  }
  
  @return $str;
}
